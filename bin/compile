#!/usr/bin/env bash

set -e

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BP_DIR=$(cd $(dirname $0); cd ..; pwd)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Export environmental variables.
function export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}
export_env_dir "$ENV_DIR" '^[A-Z_][A-Z0-9_]*$' '^(HOME|PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|LD_LIBRARY_PATH|STACK|S3_URL|RTVS_URL|REQUEST_ID)$'

# Copy files.
echo "Copying files." | indent
cp -r $BP_DIR/conf/* $BUILD_DIR
cp -r $BP_DIR/mt/* $BUILD_DIR

# Extract CPAN modules.
if [ ! -d $CACHE_DIR/local ]; then
  echo "Extrating CPAN modules." | indent
  mkdir -p $CACHE_DIR
  tar xzf $BP_DIR/perl/local.tar.gz -C $CACHE_DIR
fi

# Rename for heroku-buildpack-perl.
mv $BUILD_DIR/mt.psgi $BUILD_DIR/app.psgi

# Generate mt-config.cgi.
if [[ ! -e $BUILD_DIR/mt-config.cgi ]]; then
   echo "Generating mt-config.cgi." | indent
   chmod -f +x $BP_DIR/bin/generate-mt-config.sh || true
   $BP_DIR/bin/generate-mt-config.sh >> $BUILD_DIR/mt-config.cgi
fi

# Create html directory and copy index.html.
if [[ ! -d $BUILD_DIR/html ]]; then
  mkdir $BUILD_DIR/html
fi
if [[ -e $BUILD_DIR/index.html ]]; then
  cp $BUILD_DIR/index.html $BUILD_DIR/html/
  sed -i -e "s/mt\.cgi/\/mt\/mt\.cgi/g" $BUILD_DIR/html/index.html
  sed -i -e "s/mt-check\.cgi/\/mt\/mt-check\.cgi/g" $BUILD_DIR/html/index.html
fi

# Fix driver.
if [[ -e $BUILD_DIR/lib/MT/ObjectDriver/Driver/DBD/Legacy.pm ]]; then
  sed -i -e "s/sub need_encode { 1; }/sub need_encode {0}/" $BUILD_DIR/lib/MT/ObjectDriver/Driver/DBD/Legacy.pm
fi
